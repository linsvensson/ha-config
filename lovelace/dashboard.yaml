####################################################
#                                                  #
#                   DASHBOARD                      #
#                                                  #
####################################################
title: Dashboard
icon: mdi:tablet-dashboard
path: dashboard
visible:
  - user: 6c0e940acaba49b89d3d0f3fadef574f
type: custom:grid-layout
layout:
  #default
   grid-gap: var(--custom-layout-card-padding)
   grid-template-columns: repeat(4, 1fr) 0
   grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
   grid-template-areas: |
     "sidebar  .         .          .       ."
     "sidebar  info      mid        lights  ."
     "sidebar  info      mid        lights  ."
     "sidebar  info      mid        lights  ."
cards:
  
  - type: custom:button-card #extra_styles fix
    styles: {card: [display: none]}

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

  - type: vertical-stack
    view_layout:
      grid-area: sidebar
    cards:

      - type: custom:button-card
        entity: sensor.template_sidebar
        template: sidebar
        
      - type: horizontal-stack
        cards:

          - type: custom:button-card
            template: footer
            name: >
              <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon>
            variables:
              notify: >
                [[[
                  let hass_installed = states['sensor.installed_version_2'].state;
                  let hass_version_latest = states['sensor.latest_available_version_2'].state;
                  let hacs = states['sensor.hacs'];
                  if (hass_version_latest && hass_version_latest.includes('.')
                    && hacs && Number.isInteger(parseInt(hacs.state))) {
                    let hass_count = hass_installed !== hass_version_latest ? 1 : 0;
                    return hass_count + parseInt(hacs.state);
                  }
                  return 0;
                ]]]
        
      #################################################
      #                                               #
      #                     INFO                      #
      #                                               #
      #################################################
  - type: vertical-stack
    view_layout:
      grid-area: info
    cards:
      - type: horizontal-stack
        cards:
         - type: custom:mushroom-person-card
           entity: person.carolin
           use_entity_picture: true
         - type: custom:mushroom-person-card
           entity: person.will
           use_entity_picture: true
      - type: custom:mushroom-alarm-control-panel-card
        entity: alarm_control_panel.aarlo_arlo
        states:
          - armed_home
          - armed_away
        layout: "horizontal"
      - type: custom:vertical-stack-in-card
        style: |
          ha-card {
            box-shadow: none;
            margin-top: 0px !important;
          }
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: binary_sensor.front_door
                  - name: front door
                  - show_name: true
                  - show_state: false
                  - state:
                      - value: 'off'
                        icon: mdi:door-closed
                      - value: 'on'
                        icon: mdi:door-open
                        color: var(--orange-red-color)
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: binary_sensor.hallway_motion
                  - name: hallway
                  - show_name: true
                  - show_state: false
                  - state:
                      - value: 'off'
                        icon: mdi:sleep
                      - value: 'on'
                        icon: mdi:motion-sensor
                        color: var(--orange-red-color)
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: binary_sensor.kitchen_motion
                  - name: kitchen
                  - show_name: true
                  - show_state: false
                  - state:
                      - value: 'off'
                        icon: mdi:sleep
                      - value: 'on'
                        icon: mdi:motion-sensor
                        color: var(--orange-red-color)
          - type: horizontal-stack
            cards:
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: binary_sensor.kitchen_window
                  - name: kitchen
                  - show_name: true
                  - show_state: false
                  - state:
                      - value: 'off'
                        icon: mdi:window-closed
                      - value: 'on'
                        icon: mdi:window-open
                        color: var(--orange-red-color)
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: sensor.template_lounge_window
                  - name: lounge
                  - show_name: true
                  - show_state: false
                  - state:
                      - value: 'closed'
                        icon: mdi:window-closed
                      - value: 'open'
                        color: var(--orange-red-color)
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: binary_sensor.bedroom_window
                  - name: bedroom
                  - show_name: true
                  - show_state: false
                  - state:
                      - value: 'off'
                        icon: mdi:window-closed
                      - value: 'on'
                        icon: mdi:window-open
                        color: var(--orange-red-color)
            
      - type: custom:vertical-stack-in-card
        style: |
          ha-card {
            box-shadow: none;
            margin-top: 0px !important;
          }
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: input_select.dishwasher_status
                  - show_name: false
                  - show_state: false
                  - show_label: true
                  - tap_action:
                     action: more-info
                     entity: switch.dishwasher
                  - state:
                     - value: 'False'
                       icon: mdi:dishwasher
                       label: 'off'
                       color: var(--orange-red-color)
                     - value: 'idle'
                       label: 'idle'
                       icon: mdi:dishwasher
                     - value: 'running'
                       label: 'running'
                       icon: mdi:dishwasher
                       color: var(--orange-color)
                       
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: input_select.washer_status
                  - show_name: false
                  - show_label: true
                  - show_state: false
                  - tap_action:
                      action: more-info
                      entity: switch.washer
                  - state:
                     - value: 'False'
                       icon: mdi:washing-machine
                       color: var(--orange-red-color)
                       label: 'off'
                     - value: 'idle'
                       label: 'idle'
                       icon: mdi:washing-machine
                     - value: 'running'
                       label: 'running'
                       icon: mdi:washing-machine
                       color: var(--orange-color)
                
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: input_select.dryer_status
                  - show_label: true
                  - show_name: false
                  - show_state: false
                  - tap_action:
                      action: more-info
                      entity: switch.dryer
                  - label: >
                     [[[ return states['input_select.dryer_status'].state ]]]
                  - state:
                     - value: 'False'
                       icon: mdi:tumble-dryer
                       color: var(--orange-red-color)
                       label: 'off'
                     - value: 'idle'
                       label: 'idle'
                       icon: mdi:tumble-dryer
                     - value: 'running'
                       label: 'running'
                       icon: mdi:tumble-dryer
                       color: var(--orange-color)
                  
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: sensor.template_ac_power
                  - show_label: true
                  - show_name: false
                  - show_state: false
                  - tap_action:
                      action: more-info
                      entity: switch.ac
                  - state:
                      - value: 'off'
                        icon: mdi:air-conditioner
                        color: var(--orange-red-color)
                        label: 'off'
                      - value: 'on'
                        label: 'on'
                        icon: mdi:air-conditioner
                        color: var(--orange-color)
                
          - type: horizontal-stack
            cards:
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: input_select.coffee_status
                  - show_name: false
                  - show_state: false
                  - show_label: true
                  - tap_action:
                      action: more-info
                      entity: switch.coffee
                  - state:
                      - value: 'False'
                        icon: mdi:coffee
                        label: 'off'
                        color: var(--orange-red-color)
                      - value: 'idle'
                        icon: mdi:coffee
                        label: 'idle'
                      - value: 'brewing'
                        label: 'brewing'
                        icon: mdi:coffee
                        color: var(--orange-color)
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - entity: switch.kettle
                  - show_state: false
                  - show_label: true
                  - state:
                      - value: 'off'
                        icon: mdi:kettle
                        label: 'off'
                        color: var(--orange-red-color)
                      - value: 'on'
                        icon: mdi:kettle
                        label: 'idle'
                        color: var()--state-icon-color)
                      - value: 'boiling'
                        label: 'boiling'
                        icon: mdi:kettle
                        color: var(--orange-color)
              - type: custom:decluttering-card
                template: nest_button
                variables:
                  - show_label: true
                  - show_name: false
                  - show_state: false
                  - name: chester
                  - entity: group.tv
                  - state:
                      - value: 'off'
                        label: 'off'
                        icon: mdi:television
                      - value: 'on'
                        label: 'on'
                        icon: mdi:television
                        color: var(--orange-color)
      - type: "custom:atomic-calendar"
        showProgressBar: true
        maxDaysToShow: 20
        entities:
        - entity: calendar.thepinkkiller_gmail_com
          color: pink
        style: |
          ha-card {
            margin-top: 0px !important;
          }
          .cal-title {
            height: 20px;
            font-weight: bold;
            margin-top: -20px;
            margin-left: -8px;
            font-size: 16px !important;
          }
                    
      #################################################
      #                                               #
      #                     MID                       #
      #                                               #
      #################################################
      
  - type: vertical-stack
    view_layout:
      grid-area: mid
    cards:
      - type: custom:button-card
        entity: 'sensor.greenely_prices'
        icon: 'mdi:leaf'
        name: Greenely
        show_name: false
        tap_action:
          action: navigate
          navigation_path: /lovelace/greenelydash
        styles:
          card:
            - padding: 6%
            #- height: 190px
            - font-size: 20px
          grid:
            - grid-template-areas: '"i price" "n n" "current current" "next next" "tomorrow tomorrow"'
            - grid-template-columns: 1fr 1fr
            - grid-template-rows: 1fr min-content min-content min-content min-content
          name:
            - font-weight: bold
            - font-size: 24px
            - color: black
            - align-self: middle
            - justify-self: start
            - padding-bottom: 4px
          img_cell:
            - justify-content: start
            - align-items: start
            - margin: none
          icon:
            - color: rgb(152,251,152)
            - width: 50%
            - margin-top: -5%
          custom_fields:
            price:
              - align-self: start
              - justify-self: end
              - font-size: 20px
            current:
              - padding-bottom: 6px
              - align-self: middle
              - justify-self: start
              - font-weight: bold
              #- --text-color-sensor: '[[[ if (states['sensor.greenely_prices'].attributes.current_price > 30) return "rgb(255,69,0)"; ]]]'
            next:
              - padding-bottom: 6px
              - align-self: middle
              - justify-self: start
              - font-size: 18px
            tomorrow:
              - padding-bottom: 2px
              - align-self: middle
              - justify-self: start
              - font-weight: lighter
              - font-size: 16px
        custom_fields:
          price: >
             [[[
               return `<ha-icon
                 icon="mdi:account-cash"
                 style="width: 22px; height: 22px; color: var(--primary-color);">
                 </ha-icon><span> ${Math.round(states['sensor.greenely_prices'].attributes.current_month_value)} kr</span>`
             ]]]
          current: >
            [[[
              return entity.state + ' öre/kWh';
            ]]]
          next: >
            [[[
              var today = states['sensor.greenely_prices'].attributes.current_day;
              var tomorrow = states['sensor.greenely_prices'].attributes.next_day;
              var text = 'Next 4 hours:<br>';
              var time = states['sensor.time'].state;
              var currentIndex = today.findIndex(item => item.time.split(':')[0] === time.split(':')[0]);
              var tomorrowIndex = 0;
              var nextItem;
              
              if (today.length < currentIndex+2) {
                  nextItem = tomorrow[tomorrowIndex];
                  tomorrowIndex += 1;
              } else {
                  nextItem = today[currentIndex+1];
              }
              text += (nextItem != undefined && nextItem.price != undefined) ? Math.round(nextItem.price * 10) / 10 + ', ' : '?, ';
              if (today.length < currentIndex+3) {
                  nextItem = tomorrow[tomorrowIndex];
                  tomorrowIndex += 1;
              } else {
                  nextItem = today[currentIndex+2];
              }
              text += (nextItem != undefined && nextItem.price != undefined) ? Math.round(nextItem.price * 10) / 10 + ', ' : '?, ';
              if (today.length < currentIndex+4) {
                  nextItem = tomorrow[tomorrowIndex];
                  tomorrowIndex += 1;
              } else {
                  nextItem = today[currentIndex+3];
              }
              text += (nextItem != undefined && nextItem.price != undefined) ? Math.round(nextItem.price * 10) / 10 + ', ' : '?, ';
              if (today.length < currentIndex+5) {
                  nextItem = tomorrow[tomorrowIndex];
                  tomorrowIndex += 1;
              } else {
                  nextItem = today[currentIndex+4];
              }
              text += (nextItem != undefined && nextItem.price != undefined) ? Math.round(nextItem.price * 10) / 10 : '?';
  
              return text;
            ]]]
          tomorrow: >
            [[[
              var next_day = states['sensor.greenely_prices'].attributes.next_day;
              if (next_day === undefined || next_day.length == 0) {
                return '';
              }
              var text = 'Min tomorrow ';
              const min = next_day.reduce(function(prev, curr) {
                  return Math.round(prev.price) < Math.round(curr.price) ? prev : curr;
              });
              text += min.price + ' at ' + min.time;
              return text;
            ]]]
            
      - type: horizontal-stack
        cards:
          - type: custom:mini-graph-card
            entities:
              - sensor.lounge_temp
            animate: true
            name: lounge
            line_width: 10
            font_size: 80
            hour24: true
            hours_to_show: 24
            state_adaptive_color: true
            show:
              labels: false
              fill: true
              name_adaptive_color: true
              icon_adaptive_color: true
              extrema: false
            color_thresholds:
              - value: 0
                color: "#CCE5FF"
              - value: 10
                color: "#66B2FF"
              - value: 18
                color: "#0080FF"
              - value: 20
                color: "#87c087"
              - value: 21
                color: "#389638"
              - value: 24
                color: "#FF9932"
              - value: 25
                color: "#FF8000"
              - value: 26
                color: "#ff0000"
            style: |
              ha-card {
                margin-top: 8px !important;
                margin-bottom: 8px !important;
              }
          - type: custom:mini-graph-card
            entities:
              - sensor.lounge_temp_2
            animate: true
            name: humidity
            line_width: 10
            line_color: var(--accent-color)
            font_size: 80
            hour24: true
            hours_to_show: 24
            show:
              labels: false
              name_adaptive_color: true
              icon_adaptive_color: true
              fill: true
            style: |
              ha-card {
                margin-top: 8px !important;
                margin-bottom: 8px !important;
              }                      
      - type: horizontal-stack
        cards:
          - type: custom:mini-graph-card
            entities:
              - sensor.bedroom_temp
            animate: true
            name: bedroom
            line_width: 10
            font_size: 80
            hour24: true
            hours_to_show: 24
            state_adaptive_color: true
            show:
              labels: false
              fill: true
              name_adaptive_color: true
              icon_adaptive_color: true
              extrema: false
            color_thresholds:
              - value: 0
                color: "#CCE5FF"
              - value: 10
                color: "#66B2FF"
              - value: 18
                color: "#0080FF"
              - value: 20
                color: "#87c087"
              - value: 21
                color: "#389638"
              - value: 24
                color: "#FF9932"
              - value: 25
                color: "#FF8000"
              - value: 26
                color: "#ff0000"
            style: |
              ha-card {
                margin-top: 0px !important;
                margin-bottom: 8px !important;
              }
          - type: custom:mini-graph-card
            entities:
              - sensor.bedroom_temp_2
            animate: true
            name: humidity
            line_width: 10
            line_color: var(--accent-color)
            font_size: 80
            hour24: true
            hours_to_show: 24
            show:
              labels: false
              name_adaptive_color: true
              icon_adaptive_color: true
              fill: true
            style: |
              ha-card {
                margin-top: 0px !important;
                margin-bottom: 8px !important;
              }
              
      - type: 'custom:text-divider-row'
        text: Kitties
      - type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.template_bathroom_litterbox_days
            name: bath
            icon: mdi:emoticon-poop
            show_state: true
            tap_action:
              confirmation:
                text: '[[[ return `Are you sure you have cleaned the bathroom box?` ]]]'
              action: call-service
              service: script.turn_on
              service_data:
                entity_id: script.store_litterbox_bathroom_last_cleaned
            styles:  
              grid:
                - grid-template-areas: '"s s" "i i" "n n"'
                - grid-template-columns: 1fr 1fr
                - grid-template-rows: 1fr min-content min-content
              name:
                - justify-self: middle
                - align-self: middle
                - text-transform: lowercase
              state:
                - align-self: middle
                - justify-self: middle
                - font-weight: bold
                - font-size: 36px
                - color: >
                   [[[
                     if (entity.state < 7) return '#C5C5D2';
                     else if (entity.state >= 7 && entity.state < 14) return 'rgb(152,251,152)';
                     else if (entity.state >= 14 && entity.state < 28) return '#FFA500';
                     else return 'rgb(255,69,0)';
                   ]]]
              icon:
                - justify-content: start
                - align-items: start
                - color: >
                   [[[
                    if (entity.state < 7) return '#C5C5D2';
                    else if (entity.state >= 7 && entity.state < 14) return 'rgb(152,251,152)';
                    else if (entity.state >= 14 && entity.state < 28) return '#FFA500';
                    else return 'rgb(255,69,0)';
                   ]]]
          - type: custom:button-card
            entity: sensor.template_left_litterbox_days
            name: left
            icon: mdi:emoticon-poop
            show_state: true
            tap_action:
              confirmation:
                text: '[[[ return `Are you sure you have cleaned the left box?` ]]]'
              action: call-service
              service: script.turn_on
              service_data:
                entity_id: script.store_litterbox_left_last_cleaned
            styles:
              grid:
                - grid-template-areas: '"s s" "i i" "n n"'
                - grid-template-columns: 1fr 1fr
                - grid-template-rows: 1fr min-content min-content
              name:
                - justify-self: middle
                - align-self: middle
                - text-transform: lowercase
              state:
                - align-self: middle
                - justify-self: middle
                - font-weight: bold
                - font-size: 36px
                - color: >
                   [[[
                     if (entity.state < 4) return '#C5C5D2';
                     else if (entity.state >= 4 && entity.state < 7) return 'rgb(152,251,152)';
                      else if (entity.state >= 7 && entity.state < 14) return '#FFA500';
                      else return 'rgb(255,69,0)';
                    ]]]
              icon:
                - justify-content: start
                - align-items: start
                - color: >
                   [[[
                     if (entity.state < 4) return '#C5C5D2';
                     else if (entity.state >= 4 && entity.state < 7) return 'rgb(152,251,152)';
                     else if (entity.state >= 7 && entity.state < 14) return '#FFA500';
                     else return 'rgb(255,69,0)';
                   ]]]
          - type: custom:button-card
            entity: sensor.template_right_litterbox_days
            name: right
            icon: mdi:emoticon-poop
            show_state: true
            tap_action:
              confirmation:
                text: '[[[ return `Are you sure you have cleaned the right box?` ]]]'
              action: call-service
              service: script.turn_on
              service_data:
                entity_id: script.store_litterbox_right_last_cleaned
            styles:
              grid:
                - grid-template-areas: '"s s" "i i" "n n"'
                - grid-template-columns: 1fr 1fr
                - grid-template-rows: 1fr min-content min-content
              name:
                - justify-self: middle
                - align-self: middle
                - text-transform: lowercase
              state:
                - align-self: middle
                - justify-self: middle
                - font-weight: bold
                - font-size: 36px
                - color: >
                   [[[
                     if (entity.state < 4) return '#C5C5D2';
                     else if (entity.state >= 4 && entity.state < 7) return 'rgb(152,251,152)';
                     else if (entity.state >= 7 && entity.state < 14) return '#FFA500';
                     else return 'rgb(255,69,0)';
                     ]]]
              icon:
                - justify-content: start
                - align-items: start
                - color: >
                   [[[
                     if (entity.state < 4) return '#C5C5D2';
                     else if (entity.state >= 4 && entity.state < 7) return 'rgb(152,251,152)';
                     else if (entity.state >= 7 && entity.state < 14) return '#FFA500';
                     else return 'rgb(255,69,0)';
                   ]]]
      - type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: sensor.template_fountain_days
            name: cleaned
            icon: mdi:fountain
            show_state: true
            tap_action:
              confirmation:
                text: '[[[ return `Are you sure you have cleaned the kitty fountain?` ]]]'
              action: call-service
              service: script.turn_on
              service_data:
                entity_id: script.store_fountain_last_cleaned
            styles:  
              grid:
                - grid-template-areas: '"s s" "i i" "n n"'
                - grid-template-columns: 1fr 1fr
                - grid-template-rows: 1fr min-content min-content
              name:
                - justify-self: middle
                - align-self: middle
                - text-transform: lowercase
              state:
                - align-self: middle
                - justify-self: middle
                - font-weight: bold
                - font-size: 36px
                - color: >
                   [[[
                     if (entity.state < 2) return '#C5C5D2';
                     else if (entity.state >= 2 && entity.state < 4) return 'rgb(152,251,152)';
                     else if (entity.state >= 4 && entity.state < 7) return '#FFA500';
                     else return 'rgb(255,69,0)';
                   ]]]
              icon:
                - justify-content: start
                - align-items: start
                - color: >
                   [[[
                    if (entity.state < 2) return '#C5C5D2';
                    else if (entity.state >= 2 && entity.state < 4) return 'rgb(152,251,152)';
                    else if (entity.state >= 4 && entity.state < 7) return '#FFA500';
                    else return 'rgb(255,69,0)';
                   ]]]
          - type: custom:button-card
            entity: sensor.template_fountain_filter_days
            name: filter
            icon: mdi:fountain
            show_state: true
            tap_action:
              confirmation:
                text: '[[[ return `Are you sure you have changed the kitty fountain filter?` ]]]'
              action: call-service
              service: script.turn_on
              service_data:
                entity_id: script.store_fountain_filter_last_changed
            styles:  
              grid:
                - grid-template-areas: '"s s" "i i" "n n"'
                - grid-template-columns: 1fr 1fr
                - grid-template-rows: 1fr min-content min-content
              name:
                - justify-self: middle
                - align-self: middle
                - text-transform: lowercase
              state:
                - align-self: middle
                - justify-self: middle
                - font-weight: bold
                - font-size: 36px
                - color: >
                   [[[
                     if (entity.state < 14) return '#C5C5D2';
                     else if (entity.state >= 14 && entity.state < 28) return 'rgb(152,251,152)';
                     else if (entity.state >= 28 && entity.state < 50) return '#FFA500';
                     else return 'rgb(255,69,0)';
                   ]]]
              icon:
                - justify-content: start
                - align-items: start
                - color: >
                   [[[
                    if (entity.state < 14) return '#C5C5D2';
                    else if (entity.state >= 14 && entity.state < 28) return 'rgb(152,251,152)';
                    else if (entity.state >= 28 && entity.state < 50) return '#FFA500';
                    else return 'rgb(255,69,0)';
                   ]]]
                           
      #################################################
      #                                               #
      #                    LIGHTS                     #
      #                                               #
      #################################################
      
  - type: vertical-stack
    view_layout:
      grid-area: lights
    cards:
      - type: custom:mushroom-light-card
        entity: light.hallway
        name: hallway
        icon: 'mdi:ceiling-light'
        show_brightness_control: true
        show_color_temp_control: true
        show_color_control: true
        use_light_color: true
        style: |
          ha-card {
            box-shadow: none;
            margin-top: 0px !important;
          }
      - type: custom:mushroom-light-card
        entity: light.kitchen_table
        name: dining
        icon: 'mdi:ceiling-light'
        show_brightness_control: true
        show_color_temp_control: true
        style: |
          ha-card {
            box-shadow: none;
            margin-top: 0px !important;
          }
      - type: custom:mushroom-light-card
        entity: light.kitchen_spotlight
        name: kitchen spotlight
        icon: 'mdi:track-light'
        show_brightness_control: true
        show_color_temp_control: true
        style: |
          ha-card {
            box-shadow: none;
            margin-top: 0px !important;
          }
      - type: custom:mushroom-light-card
        entity: light.lounge_spotlight
        name: lounge spotlight
        icon: 'mdi:track-light'
        show_brightness_control: true
        show_color_temp_control: true
        style: |
          ha-card {
            box-shadow: none;
            margin-top: 0px !important;
          }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-light-card
            entity: switch.couch_time
            name: couch time
            icon: 'mdi:sofa'
            layout: "vertical"
            style: |
             ha-card {
               box-shadow: none;
               margin-top: 0px !important;
             }
          - type: custom:mushroom-light-card
            entity: group.bedroom_cozy
            name: cozy
            icon: 'mdi:bed-empty'
            layout: "vertical"
            style: |
             ha-card {
               box-shadow: none;
               margin-top: 0px !important;
             }
      - type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: 'input_boolean.motion_kitchen'
            icon: 'mdi:ghost'
            color: var(--primary-color)
            name: kitchen
            styles:
              icon:
                - color: >
                    [[[
                      if (entity.state == 'on') return 'var(--primary-color)';
                      else return 'var(--white)';
                    ]]]
          - type: custom:button-card
            entity: 'input_boolean.motion_hallway'
            icon: 'mdi:ghost'
            color: var(--primary-color)
            name: hallway
            styles:
              icon:
                - color: >
                    [[[
                      if (entity.state == 'on') return 'var(--primary-color)';
                      else return 'var(--white)';
                    ]]]
                    