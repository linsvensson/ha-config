template:

    ####################################################
    #                                                  #
    #                      SENSOR                      #
    #                                                  #
    ####################################################

  - sensor:
      - unique_id: sidebar
        state: template
        attributes:
          time: >
            {% set hours = now().strftime('%H') %}
            {% set minutes = now().strftime('%M') %}
            <span class="time">
              {{ hours }}<span class="time-colon">:</span>{{ minutes }}
            </span>
          date: >
            <font color='#6a7377'><b>
            {% if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
            {% set days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] %}
            {% set months = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'] %}
              {{ days[now().weekday()] }}<br>
              {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
            {% endif %}
            </b></font>
          greet: >
            <b>
            {% set time = now().hour %}
            {% if time <= 1 %} Good night {{'\U0001F611'}}
            {% elif time <= 3 %} Good night {{'\U0001F62A'}}
            {% elif time <= 5 %} Good night {{'\U0001F634'}}
            {% elif time <= 7 %} Good morning {{'\U0001F4A9'}}
            {% elif time <= 9 %} Good morning {{'\u2615\uFE0F'}}
            {% elif time <= 10 %} Good morning {{'\U0001F642'}}
            {% elif time <= 13 %} Good day {{'\U0001F60A'}}
            {% elif time <= 15 %} Good day {{'\U0001F60E'}}
            {% elif time <= 17 %} Good day {{'\U0001F44B\U0001F3FB'}}
            {% elif time <= 19 %} Good evening {{'\U0001F44B\U0001F3FB'}}
            {% elif time <= 22 %} Good evening {{'\U0001F60C'}}
            {% elif time <= 23 %} Good evening {{'\U0001F974'}}
            {% else %} Good evening {{'\U0001F974'}}
            {% endif %}
            </br>
            </br>
            <font color='#6a7377'>
            {% set dodo_count = states('counter.dodo_food_counter_daily') %}
            {{'\U0001F963'}}{{'\U0001F408\U0000200D\U00002B1B'}} {{dodo_count}}
            </font>
            </b>
          weather: >
            <b>
            {% set temperature = state_attr('weather.smhi_home', 'temperature') | round(0) %}
            {% set forecasts = state_attr('weather.smhi_home', 'forecast') %}
            {% if not is_state('weather.smhi_home', 'unknown') %}
            {% if temperature | float(0) <= 0.0 %}
                Feels like {{ temperature }}°
            {% elif temperature | float(0) > 0.0 %}
                Feels like {{ temperature}}°
            {% endif %}
            {% else %}
                Couldn't fetch weather information...
            {% endif %}
            </b>
          wifi: >
            <img src="/local/wifiqr.png" alt="wifi" height=80% width=80%/>
            
      - unique_id: updates_available
        icon: mdi:arrow-up-bold-circle-outline
        state: > 
          {% set ha_installed = states('sensor.installed_version_2') %}
          {% set ha_version_latest = states('sensor.latest_available_version_2') %}
          {% set hacs = states('sensor.hacs') | int(0) %}
          {% if ha_version_latest != 'unavailable' and is_number(hacs) and '.' in ha_version_latest and hacs != 'unavailable' -%}
             {% set ha_count = 1 if ha_installed != ha_version_latest else 0 %}
             {{int(ha_count + hacs)}}
          {% endif %}
        
      - unique_id: hass_version
        state: >
          {{ 'Latest' if states('sensor.installed_version_2') ==
          states('sensor.latest_available_version_2') else states('sensor.latest_available_version_2') }}
        attributes:
          friendly_name: >
            Installed {{ states('sensor.installed_version_2') }}
          icon: mdi:home-assistant
          
      #- unique_id: fullykiosk_storage
      #  icon: mdi:sd
      #  unit_of_measurement: '%'
      #  state: >
      #    {% set FreeSpace = states('sensor.lenovo_tab_m10_internal_storage_free_space') | float(default=0) %}
      #    {% set TotalSpace = states('sensor.lenovo_tab_m10_internal_storage_total_space') | float(default=0) %}
      #    {% if not (FreeSpace == 0.0 or TotalSpace == 0.0) %}
      #      {{ 100 - (FreeSpace / TotalSpace * 100) | int(default=0) }}
      #    {% endif %}
      #  attributes:
      #    friendly_name: Storage
  #
      #- unique_id: fullykiosk_memory
      #  icon: mdi:memory
      #  unit_of_measurement: '%'
      #  state: >
      #    {% set FreeMemory = states('sensor.lenovo_tab_m10_ram_free_memory') | float(default=0) %}
      #    {% set TotalMemory = states('sensor.lenovo_tab_m10_ram_total_memory') | float(default=0) %}
      #    {% if not (FreeMemory == 0.0 or TotalMemory == 0.0) %}
      #      {{ 100 - (FreeMemory / TotalMemory * 100) | int(default=0) }}
      #    {% endif %}
      #  attributes:
      #    friendly_name: Memory
          
      - unique_id: washer
        icon: mdi:washing-machine
        state: >
          {% set status = states('switch.washer') %}
          {% set power = states('sensor.node_2_electric_consumed_w') | int(0) %}
          {% if status == 'on' %}
            {{ 'running' if power > 2 else 'idle' }}
          {% else %}
            off
          {% endif %}
          
      - unique_id: dryer
        icon: mdi:tumble-dryer
        state: >
          {% set status = states('switch.dryer_current_value') %}
          {% set power = states('sensor.dryer_electric_consumed_w') | int(0) %}
          {% if status == 'on' %}
            {{ 'running' if power > 2 else 'idle' }}
          {% else %}
            off
          {% endif %}
          
      - unique_id: ac_power
        icon: mdi:fan
        state: >
          {% set status = states('switch.ac') %}
          {% set power = states('sensor.ac_electric_consumed_w') | int(0) %}
          {% if status == 'on' %}
            {{ 'running' if power > 2 else 'idle' }}
          {% else %}
            off
          {% endif %}
          
      - unique_id: lounge_window
        icon: >
          {% if is_state('binary_sensor.lounge_window_right', 'on') %}
             mdi:window-open
          {% else %}
             mdi:window-closed
          {% endif %}
        state: >
          {% if is_state('binary_sensor.lounge_window_right', 'on') %}
             open
          {% else %}
             closed
          {% endif %}
          
      - unique_id: kitchen_window
        icon: >
          {% if is_state('binary_sensor.lounge_window_left', 'on') %}
             mdi:window-open
          {% else %}
             mdi:window-closed
          {% endif %}
        state: >
          {% if is_state('binary_sensor.lounge_window_left', 'on') %}
             open
          {% else %}
             closed
          {% endif %}
          
      - unique_id: bedroom_window
        icon: >
          {% if is_state('binary_sensor.bedroomn_window', 'on') %}
             mdi:window-open
          {% else %}
             mdi:window-closed
          {% endif %}
        state: >
          {% if is_state('binary_sensor.bedroomn_window', 'on') %}
             open
          {% else %}
             closed
          {% endif %}
          
      - unique_id: vally_uptime
        icon: mdi:clock
        state: >
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
          {% set days = (time_diff // (60 * 60 * 24)) | int(0) %}
          {% set weeks = (days // 7) | int(0) %}
          {% set hours = (time_diff // (60 * 60)) | int(0) %}
          {% set hours =  hours - days * 24 %}
          {% set minutes = (time_diff // 60) | int(0) %}
          {% set minutes = minutes - (days * 24 * 60) - (hours * 60) %}
          {% set days = (days | int(0)) - (weeks * 7) %}
          {% macro phrase(value, name) %}
          {%- set value = value | int(0) %}
          {%- set end = 's' if value > 1 else '' %}
          {{- '{} {}{}'.format(value, name, end) if value | int(0) > 0 else '' }}
          {%- endmacro %}          
          {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
          {{ text }}
          
      - unique_id: fountain_filter_days
        state: >
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.fountain_filter_last_changed')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      - unique_id: fountain_days
        state: >
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.fountain_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      - unique_id: left_litterbox_days
        state: >
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.litterbox_left_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      - unique_id: right_litterbox_days
        state: >
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.litterbox_right_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      - unique_id: bathroom_litterbox_days
        state: >
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.litterbox_bathroom_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      - unique_id: cooker_hood_filter_days
        state: >
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.cooker_hood_filter_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      - unique_id: bathroom_temp
        icon: mdi:thermometer
        attributes:
          humidity: "{{ states('sensor.humidity_44') | int(0) }}"
        state: "{{ states('sensor.temperature_45') | int(0) }}"

      - unique_id: weekday_text
        state: >
          {% if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
          {% set days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] %}
          {{ days[now().weekday()] }}
          {% endif %}

      - unique_id: month_text
        state: >
         {% if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
         {% set months = ['January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'] %}
              {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
         {% endif %}
          
      - unique_id: temp_inside
        icon: mdi:home-thermometer
        state: >
          {{ ((float(states('sensor.lounge_temp_temperature')) +
            float(states('sensor.bedroom_temp_temperature'))) / 2) | round(1)
          }}
          
      - unique_id: front_door
        icon: >
          {% if is_state('binary_sensor.front_door', 'on')
             or is_state('binary_sensor.front_door', 'on') %}
             mdi:door-open
          {% else %}
             mdi:door-closed
          {% endif %}
        state: >
          {% if is_state('binary_sensor.front_door', 'on')
             or is_state('binary_sensor.front_door', 'on') %}
             open
          {% else %}
             closed
          {% endif %}
         
      - unique_id: hallway_motion
        icon: >
          {% if is_state('binary_sensor.hallway_motion', 'on')
             or is_state('binary_sensor.hallway_motion', 'on') %}
             mdi:motion-sensor
          {% else %}
             mdi:sleep
          {% endif %}
        state: >
          {% if is_state('binary_sensor.hallway_motion', 'on')
             or is_state('binary_sensor.hallway_motion', 'on') %}
             on
          {% else %}
             off
          {% endif %}
          
      - unique_id: kitchen_motion
        icon: >
          {% if is_state('binary_sensor.kitchen_motion', 'on')
             or is_state('binary_sensor.kitchen_motion', 'on') %}
             mdi:motion-sensor
          {% else %}
             mdi:sleep
          {% endif %}
        state: >
          {% if is_state('binary_sensor.kitchen_motion', 'on')
             or is_state('binary_sensor.kitchen_motion', 'on') %}
             on
          {% else %}
             off
          {% endif %}
          
      - unique_id: greenely_has_prices
        state: >
          {% set current_day = state_attr('sensor.greenely_prices', 'current_day') %}
          {% if current_day != [] %}
             true
          {% else %}
             false
          {% endif %}
