#https://home-assistant.io/components/sensor/

####################################################
#                                                  #
#                      TEMPLATE                    #
#                                                  #
####################################################

#https://home-assistant.io/components/sensor.template/
  - platform: template
    sensors:
    
      #paddington_memory_percentage:
      #  unit_of_measurement: '%'
      #  value_template: "{{ ((states('sensor.paddington_free_ram') | int(0) / states('sensor.paddington_total_ram') | int(0)) * 100) | round }}"
    #
      #paddington_storage_percentage:
      #  unit_of_measurement: '%'
      #  value_template: "{{ ((states('sensor.paddington_free_space') | int(0) / states('sensor.paddington_total_space') | int(0)) * 100) | round }}"
      #  
      #paddington_battery:
      #  device_class: battery
      #  friendly_name: 'Paddington Battery'
      #  value_template: "{{states('sensor.paddington_battery_level') | round}}"
      #  unit_of_measurement: '%'
    
      washer:
        value_template: >-
          {% set status = states('switch.washer') %}
          {% set power = states('sensor.node_2_electric_consumed_w') | int(0) %}
          {% if status == 'on' %}
            {{ 'running' if power > 2 else 'idle' }}
          {% else %}
            off
          {% endif %}   
        icon_template: >-
          mdi:washing-machine
          
      dryer:
        value_template: >-
          {% set status = states('switch.dryer_current_value') %}
          {% set power = states('sensor.dryer_electric_consumed_w') | int(0) %}
          {% if status == 'on' %}
            {{ 'running' if power > 2 else 'idle' }}
          {% else %}
            off
          {% endif %}   
        icon_template: >-
          mdi:tumble-dryer
    
      ac_power:
        value_template: >-
          {% set power = states('sensor.ac_electric_consumed_w') | int(0) %}
          {{ 'on' if power > 2 else 'off' }}
        icon_template: >-
          mdi:fan
    
      lounge_window:
        value_template: >-
          {% if is_state('binary_sensor.lounge_window_0', 'on')
             or is_state('binary_sensor.lounge_window_1', 'on') %}
             open
          {% else %}
             closed
          {% endif %}
        icon_template: >-
          {% if is_state('binary_sensor.binary_sensor.lounge_window_0', 'on')
             or is_state('binary_sensor.lounge_window_1', 'on') %}
             mdi:window-open
          {% else %}
             mdi:window-closed
          {% endif %}
          
      #dickmachine:
      #  value_template: >-
      #   {% set time_diff = as_timestamp(utcnow()) - as_timestamp(states.sensor.dickmachine_timeticks.last_changed) %}
      #   {% set minutes = (time_diff / 60) | int(0)  %}
      #   {%- if minutes < 5 %} On {% else %} Off {% endif -%}
      #  icon_template: >-
      #    mdi:desktop-classic
          
      #dickmachine_uptime:
      #  value_template: >-
      #   {% set time = states('sensor.dickmachine_timeticks') | int(0) %}
      #   {% set minutes = ((time % 360000) / 6000) | int(0)%}
      #   {% set hours = ((time % 8640000) / 360000) | int(0) %}
      #   {% set days = (time / 8640000) | int(0) %}
      #   {% macro phrase(value, name) %}
      #   {%- set value = value | int(0) %}
      #   {%- set end = 's' if value > 1 else '' %}
      #   {{- '{} {}{}'.format(value, name, end) if value | int(0) > 0 else '' }}
      #   {%- endmacro %}          
      #   {% set text = [ phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
      #   {%- if states.sensor.dickmachine.state == 'Off' %} n/a {% else %} {{text}} {% endif -%}  
      #  icon_template: >-
      #    mdi:clock    
          
      #engelbrekt:
      #  value_template: >-
      #   {% set time_diff = as_timestamp(utcnow()) - as_timestamp(states.sensor.engelbrekt_timeticks.last_changed) %}
      #   {% set minutes = (time_diff / 60) | int(0)  %}
      #   {%- if minutes < 5 %} On {% else %} Off {% endif -%}
      #  icon_template: >-
      #    mdi:desktop-classic
      #    
      #engelbrekt_uptime:
      #  value_template: >-
      #   {% set time = states('sensor.engelbrekt_timeticks') | int(0) %}
      #   {% set minutes = ((time % 360000) / 6000) | int(0)%}
      #   {% set hours = ((time % 8640000) / 360000) | int(0) %}
      #   {% set days = (time / 8640000) | int(0) %}
      #   {% macro phrase(value, name) %}
      #   {%- set value = value | int(0) %}
      #   {%- set end = 's' if value > 1 else '' %}
      #   {{- '{} {}{}'.format(value, name, end) if value | int(0) > 0 else '' }}
      #   {%- endmacro %}          
      #   {% set text = [ phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
      #   {%- if states.sensor.engelbrekt.state == 'Off' %} n/a {% else %} {{text}} {% endif -%}
      #  icon_template: >-
      #    mdi:clock
          
      vally_uptime:
        value_template: >-
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
          {% set days = (time_diff // (60 * 60 * 24)) | int(0) %}
          {% set weeks = (days // 7) | int(0) %}
          {% set hours = (time_diff // (60 * 60)) | int(0) %}
          {% set hours =  hours - days * 24 %}
          {% set minutes = (time_diff // 60) | int(0) %}
          {% set minutes = minutes - (days * 24 * 60) - (hours * 60) %}
          {% set days = (days | int(0)) - (weeks * 7) %}
          {% macro phrase(value, name) %}
          {%- set value = value | int(0) %}
          {%- set end = 's' if value > 1 else '' %}
          {{- '{} {}{}'.format(value, name, end) if value | int(0) > 0 else '' }}
          {%- endmacro %}          
          {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
          {{ text }}
        icon_template: >-
          mdi:clock
          
      fountain_filter_days:
        value_template:  >-
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.fountain_filter_last_changed')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      fountain_days:
        value_template:  >-
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.fountain_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
    
      left_litterbox_days:
        value_template:  >-
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.litterbox_left_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
    
      right_litterbox_days:
        value_template:  >-
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.litterbox_right_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
      bathroom_litterbox_days:
        value_template:  >-
          {% set time_diff = as_timestamp(now()) - as_timestamp(states('input_datetime.litterbox_bathroom_last_cleaned')) %}
          {{ (time_diff // (60 * 60 * 24)) | int(0) }}
          
        